name: CI

on:
  push:
    branches: [ "dev", "stable", "main" ]
  pull_request:
    branches: [ "dev", "stable", "main" ]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
      # 1) Check out source code
      - name: Check out the repo
        uses: actions/checkout@v3

      # 2) Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'  # or whichever version you prefer

      # 3) Install dependencies (for unit tests)
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4) Run unit tests (fail fast if any test fails)
      - name: Run Python unittests
        run: |
          python -m unittest discover -v

      # 5) Build Docker Image (only if tests above passed)
      - name: Build Docker image
        run: |
          docker build -t myapp:latest .

      # 6) Scan Docker Image with Trivy Action
      - name: Trivy scan image
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          image-ref: 'myapp:latest'
          vulnerability-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'   # Fail the job if CRITICAL/HIGH vulns are found
          ignore-unfixed: 'false'

      # 7) (Optional) Scan your repository filesystem for secrets or config issues
      - name: Trivy scan filesystem
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          path: '.'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'
          ignore-unfixed: 'false'
